

type VehicleResult {
	id: ID!,
	type: String,
	modelCode: String,
	brandName: String,
	launchDate: String
}

type UserDataResult {

    id: Int,
    email: String,
    banned: Boolean,
    status: String,
    firstName: String,
    lastName: String,
    created: String,
    phone: String,
    countryCode: String,
    roles: [String],
    base64Picture: String

}

type AuthResult {
	email: String,
	token: String
}

type Organisation {
    id: Int,
    name: String,
    description: String,
    created: String,
    base64ImageLogo: String 
}


type Query {
	vehicle(id: ID): VehicleResult
    authUser(email: String, password: String):AuthResult
    userOrganisations: [Organisation]
}

type Mutation {
	createVehicle(type: String!, modelCode: String!, brandName: String, launchDate: String):VehicleResult
}
